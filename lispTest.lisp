(defclass Event ()
   (  (Year :accessor Event-Year)
      (Month :accessor Event-Month)
      (Day :accessor Event-Day)
      (hour :accessor Event-hour)
      (Name :accessor Event-Name)
      (Notes :accessor Event-Notes)
   )
    )
    (defmethod timeUntil((object Event) currHour)
        (if(< (- (Event-Hour object) currHour) 0)
            (+ 24 (- (Event-Hour object) currHour))
            (- (Event-Hour object) currHour)))

    (defmethod getYear ((object Event))
        (format t "Year ~d~%" (Event-Year object))
    )

    (defmethod getHour ((object Event))
        (format t "Hour ~d~%" (Event-Hour object))
    )

    (defmethod getEvent ((object Event))
        (format t "Year: ~d~%" (Event-Year object))
        (format t "Month: ~d~%" (Event-Month object))
        (format t "Day: ~d~%" (Event-Day object))
        (format t "Hour: ~d~%" (Event-hour object))
        (format t "Name: ~d~%" (Event-Name object))
        (format t "Description/Notes: ~d~%" (Event-Notes object))
    )

    (setf item (make-instance 'Event))
    (setf (Event-Year item) 2021)
    (setf (Event-Month item) 11)
    (setf (Event-Day item) 10)
    (setf (Event-Hour item) 14)
    (setf (Event-Name item) "Class")
    (setf (Event-Notes item) "This is text filler")
    (setf (Event-Notes item) "This is text filler 2")

    (setf eventOne (make-instance 'Event))
    (setf (Event-Year eventOne) 2022)
    (setf (Event-Month eventOne) 13)
    (setf (Event-Day eventOne) 15)
    (setf (Event-hour eventOne) 10)
    (setf (Event-Name eventOne) "Birthday")
    (setf (Event-Notes eventOne) "This is text filler")

    (setf eventTwo (make-instance 'Event))
    (setf (Event-Year eventTwo) 2023)
    (setf (Event-Month eventTwo) 5)
    (setf (Event-Day eventTwo) 20)
    (setf (Event-hour eventTwo) 5)
    (setf (Event-Name eventTwo) "School")
    (setf (Event-Notes eventTwo) "This is text filler")

    (getEvent item)
    (format t "Time Until Event: ~d~%" (timeUntil item 17)) ;;Unit test One
    (getYear item)

    (getEvent eventOne)
    (format t "Time Until Event: ~d~%" (timeUntil eventOne 19)) ;;Unit test two
    (getYear eventOne)

    (getEvent eventTwo)
    (format t "Time Until Event: ~d~%" (timeUntil eventTwo 15)) ;;Unit test three
    (getYear eventTwo)